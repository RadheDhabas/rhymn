// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model started

enum UserRole {
  ADMIN
  MODERATOR
  USER
}
model User {
  id           String   @id @default(uuid()) @db.Uuid
  name         String?
  email        String   @unique
  username     String   @unique
  password     String?
  role         UserRole @default(USER)
  googleId     String?
  otp          String?
  otpExpiresAt DateTime?
  createdAt    DateTime @default(now())
  lastLoginAt  DateTime?
  updatedAt    DateTime  @updatedAt
  avatarUrl    String?
  googleAccessToken String?
  googleRefreshToken String?
}

model Song {
  id          String   @id @default(uuid()) @db.Uuid
  title       String
  lyrics      String
  sortDesc    String?
  releaseDate DateTime
  album       Album?    @relation(fields: [albumId], references: [id])
  albumId     String?   @db.Uuid
  cloudUrl    String?
  youtubeUrl  String?
  image       String?
  instrumentPlayers String?
  artists     Artist[]  @relation("SongArtists")
  featuring   Artist[]  @relation("SongFeaturing")
  tags        Tag[]     @relation("SongTags")
  categories  Category[] @relation("SongCategories")
  producedBy  String?
  writtenBy   Writer[]   @relation("SongWriters")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Artist {
  id        String   @id @default(uuid()) @db.Uuid
  name      String  @unique
  songs     Song[]  @relation("SongArtists")
  features  Song[]  @relation("SongFeaturing")
}

model Tag {
  id    String   @id @default(uuid()) @db.Uuid
  name  String @unique
  songs Song[] @relation("SongTags")
}

model Writer {
  id    String   @id @default(uuid()) @db.Uuid
  name  String @unique
  songs Song[] @relation("SongWriters")
}
model Album {
  id    String   @id @default(uuid()) @db.Uuid
  name  String  @unique
  songs Song[]
}

model Category {
  id           String   @id @default(uuid()) @db.Uuid
  name         String    @unique
  songs        Song[]    @relation("SongCategories")
}
